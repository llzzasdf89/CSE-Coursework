                                                CSE112 Week 7 笔记
Knowledge Representation （知识呈现）指的是能够以一种合适的计算机语言表达真实世界的知识的方式
在人工智能领域中我们常常使用推断引擎已经知识库去推测一些未知的知识。其执行过程为：
在推断引擎中加入一些与定义域无关的算法，这些算法在这可以理解为一些条件或者问题。推断引擎会向知识库（knowledge base)发出询问、知识的请求。在获取了这些知识后结合其算法推断出新结论、知识
知识库：知识库是由一系列已知的知识组成的类似于数据库的仓库
推断引擎是由算法和推断和推断规则组成的，推断规则是一系列规则，这些规则是建立在已有知识上的。正是由于推断规则的存在，所以推断引擎推测出的结果一定是建立在已有知识上推测出的结果。

知识呈现可以以逻辑命题的方式呈现
使用命题逻辑表现知识呈现的步骤:
1.以命题逻辑的方式描述在特定领域中实际存在于知识库的知识，这里特定领域可以被理解为解题时候的问题涉及领域。
2.生成一个推断a 
3.尝试着证明 已知知识（KB）=>a 是正确的

蕴涵：蕴涵可以理解为包含.其含义为一件事由另一件事衍生而来。 其符号以KB |= a 表示。
KB 蕴涵语句a 当且仅当a 在KB任何情况下都为真的时候成立。 蕴涵还有另外一种说法：a 是 KB 的逻辑结果
推断：推断可以由符号KB ⊢i a 表示，其中i是算法（理解为规则或者条件都可以）。 其寓意是 KB(已知知识) 在规则i下可以推断出命题 a 的成立 .
算法 i 有两种性质：
1.稳健性(soundness): 一个算法只能(关键词)推断出被蕴涵的句子，那么就称这个算法为健壮性的， 用符号表示为i 是稳健的如果无论何时 KB ⊢i a (KB推断出a), 那么就可以说KB蕴涵a 
2.完整性(completeness): 一个算法可以推断出任何被蕴涵的句子，用符号表示为 i 是完整的 如果无论何时KB |= a , KB ⊢i a 也是成立的
两种性质可以理解为相反关系，稳健性是由推断关系推出蕴涵关系，而完整性是由蕴涵关系推断出推断关系

推断常用规则：
在推断规则中存在着一些常用规则，这些规则都是经过证明的并且可以直接参与逻辑命题真值计算中使用的，有了这些规则以后可以减少真值表的使用从而快速找到答案
规则1 : 命题演算分离规则（英文名：modus ponens）
其规则描述如下： 如果一个蕴涵的前提(条件命题)为真，那么结果也必须为真。
规则2：消除(英文名:Elimination) : 其描述为我们可以从连接当中推断出参与连接的连接项的真值。 例如a^b为真，那么一定可以推断出a或b为真
规则3：连接引进（∧introduction): 其描述为如果a为真并且b为真，那么a连接b一定为真
规则4：析取引进（∨introduction）:其描述为如果A为真，那么A∨B一定为真
规则5：双重否定消除:其描述为一个命题若取反两次，则其真值和原命题相同。 即┐┐A 等价于 A 
规则6：决议: 其描述为如果我们知道“A或B”为真且我们知道“非B或C”为真，那么我们就可以得出“A或C”为真的结论。

逻辑命题的证明：不考虑解释的逻辑命题推理被称为逻辑命题的证明。
其证明方法如下：在给定了已知条件的时候，根据已知条件产生正确结论或命题
证明健壮性和完整性。证明健壮性和完整性其实方法就是从定义出发，一般情况下是给定规则Ai（i是不定的，可能有很多个），这些Ai都能推出命题 B。 尝试着证明A1 ∧A2 ∧ A3...∧Ai |= B
完整性：完整性的证明和健壮性相反 一般给定条件是A1 ∧A2 ∧ A3...∧An |= B, 尝试着证明An都能推出命题 B


                                        Week8 笔记
有效性(validity)：如果在任何情况下（关键词）一个句子的真值为真，那么我们称这个句子是有效的（valid)或称之为同义反复的(tautology)。
有效性是和推断定理相联系的：1.KB 蕴涵 a 当且仅当 KB=> a 为有效的时候成立。
                       2.或者我们可以说KB蕴涵a 当且仅当(KB ^ ┐a)为不可满足的时候成立，两种说法都是一样的。
此时需要引进剩下两个概念：
1.不可满足的(unsatisfiable):对于任何一个命题逻辑句子，在任何情况下（关键词）真值恒为假，我们则称这种句子为不可满足的句子
2.可满足的(satisfiable): 对于任何一个命题逻辑句子，存在至少一种情况（关键字）能够使得该句子真值为真，则这种句子我们称之为可满足的句子
        另外存在反向证明定理: 如果一个命题逻辑句子 a 是有效的，那么它的否命题┐a一定是不可满足的
验证句子可满足性的方法：
1.列举真值表，将该句子在所有解释下（情况）下的真值列举出来，从而判断该句子的真值情况如何。
但是列举真值表的方法在某些情况下效率会特别低，根据一个句子的命题变元的多少，一个真值表可以包含2的n次方行以及2的n次方步骤。 因此这个方法不推崇
真值表方法适合使用在变元数较少的情况下
2.反向思考法： 有些命题逻辑的句子并不是特别好判断真值，我们可以将它反向更改格式后进行判断。例如KB 蕴含 a 我们完全可以将其改变成KB∧┐a的形式来进行判断
推理过程： KB蕴涵a 可以被改写为 ┐KB∨a （蕴涵可以理解为 kb => a, 而根据kb => a 即蕴含的定义， 蕴含的式子和析取的式子等价，所以 kb => a 可以被改写为 ┐KB v a )
而根据之前的反向证明定理 一个命题逻辑句子a是有效的，那么它的否命题一定是不可满足的。 而 ┐KB v a的否命题为 ┐( ┐KB v a) ， 即 KB ∧ ┐a )
所以说证明KB 蕴涵 a 的反向证明方法即为证明 KB ∧ ┐a 命题逻辑句子为不可满足的。
而KB一般是由知识库给出的，所以给出来的KB问题真值一般都是为true的。 所以反向思考问题在这个程度上被转换成了
确认命题 a 的真值，这样效率比起真值表高出了一大截
3. 等价式转换法：
等价式子： 等价式子指的是对于两个命题逻辑句子 A 和 B ， 若这两个句子在任何解释下他们的真值都 相同（关键词）， 那么这两个句子被称为等价式句子
等价式句子被写作 A ≡ B。 
因为等价式子的存在，其允许我们将复杂的命题逻辑句子可以转换为更简单的句子从而列举真值表解决问题。 
对于等价式子的转换， 常用下述几种转换定律：
幂等律： A ∧ A ≡ A , A v A ≡ A
结合律： (A ∧ B) ∧ C ≡ A ∧ (B ∧ C), (A v B) v C ≡ A v (B v C)
交换律: A ∧ B ≡ B ∧ A ， A v B ≡ B v A
分配律: A ∧ (B v C) ≡ (A ∧ B) v (A ∧ C), A v (B ∧ C) ≡ (A v B) ∧ (A v C)
同一律: A ∧ T ≡ A, A v F ≡ A, A ∧ F ≡ F, A v T ≡ T
补充律: A ∧  ┐A ≡ F, A v ┐A ≡ T, ┐(┐ A) ≡ A,  ┐T ≡ F, ┐F ≡ T
得摩根定律：┐(A ∧ B) ≡ ┐ A v ┐B, ┐(A v B) ≡ ┐A ∧ ┐B
A=>B ≡ ┐A v B
A<=>B ≡ (A => B) ∧ (B => A)

根据这些定律，一些经典常用的格式被总结了出来，并且可以简化运算
格式1. 否定格式
A<=>B 化为 (A=>B) ∧ (B=>A)
A=>B 化为 ┐A v B
┐(A ∧ B) 化为 ┐A v ┐B
┐(A v B) 化为  ┐A ∧ ┐B
┐┐A 化为 A
┐(A=>B) 化为 A ∧ ┐B
格式2.连接式
连接式是以A1 ∧ A2 ∧ A3 ∧.....Ak
根据等价式定律再结合常用格式的运算， 我们可以很大程度上减少真值计算的量


